@page "/CClientes";
@inject HttpClient httpClient
@inject NotificationService notificationService;

<div class="card-header mt-4">

	<div class="card-header d-flex align-items-center">
		<img src="Images/pngwing.com.png" class="img-logo" />
		<h1>Consulta Clientes</h1>
	</div>

	<div class="row mt-2">
		<label class="mt-2">Filtrar por:</label>

		<div class="col">
			<select class="form-select" @bind="opciones">
				<option value="0" disabled selected>Elija una opci&oacute;n</option>
				<option value="1">Nombre cliente</option>
				<option value="2">Dirreci&oacute;n</option>
				<option value="3">Tel&eacute;fono</option>
			</select>
		</div>

		<div class="col-md-4">
            @if (opciones != 0 )
            {
                <input type="text" class="form-control" @bind="FiltroString"></input>
            }
        </div>

		<div class="col col-md-4">
			<button class="btn btn-primary ml-2" type="button" @onclick="Buscar">
				<i class="oi oi-magnifying-glass" />
			</button>
		</div>

	</div>

	<div class="card-body">
		<div class="table-responsive ">
			<table border="1" class="table table-bordered table-striped ">
				<thead>
					<tr class="table-secondary">
						<th>Nombre Cliente</th>
						<th>Dirreci&oacute;n</th>
						<th>Tel&eacute;fono</th>
						<th>Fidelidad</th>
						<th>Ver transacciones</th>
					</tr>
				</thead>
                <tbody>
                    @foreach (var Cliente in ListaClientes)
                    {
                        <tr>
                            <td>@Cliente.Nombre</td>
                            <td>@Cliente.Dirección</td>
                            <td>@Cliente.Teléfono</td>
                            <td>@Cliente.Fidelidad</td>
                            <td>
                                <a href="
                                    @($"Ctransaccion/{Cliente.ClienteId}")
                                            " class="btn btn-outline-primary">
                                    <i class="oi oi-eye" />
                                    </a>
                            </td>
                        </tr>
                    }
                </tbody>
			</table>
		</div>
	</div>


</div>



@code {

    public int opciones { get; set; }
    public int Conteo { get; set; }
    public string FiltroString { get; set; } = "";
    List<Clientes> ListaClientes = new List<Clientes>();
    
    protected override async Task OnInitializedAsync()
    {
        await Buscar();
    }

    public async Task Buscar()
    {
        ListaClientes = await httpClient.GetFromJsonAsync<List<Clientes>>($"api/Clientes") ?? new List<Clientes>();
        Conteo = ListaClientes != null ? ListaClientes!.Count() : 0;

        if (Conteo == 0)
        {
            var mensaje = new NotificationMessage
                {
                    Severity = NotificationSeverity.Error,
                    Summary = "Error",
                    Detail = "No tiene registros guardados.",
                    Duration = 4000
                };
            notificationService.Notify(mensaje);

            return;
        }

        if (opciones == 1)
        {
            ListaClientes = ListaClientes.Where(p => (string.IsNullOrEmpty(FiltroString) || p.Nombre.ToLower().Contains(FiltroString.ToLower()))).ToList() ?? new List<Clientes>();
        }
        else if (opciones == 2)
        {
            ListaClientes = ListaClientes.Where(p => (string.IsNullOrEmpty(FiltroString) || p.Dirección.ToLower().Contains(FiltroString.ToLower()))).ToList() ?? new List<Clientes>();
        }
        else if (opciones == 3)
        {
            ListaClientes = ListaClientes.Where(p => (string.IsNullOrEmpty(FiltroString) || p.Teléfono.Contains(FiltroString))).ToList() ?? new List<Clientes>();
        }    

        Conteo = ListaClientes != null ? ListaClientes!.Count() : 0;
        if (Conteo == 0)
        {
            var mensaje = new NotificationMessage
                {
                    Severity = NotificationSeverity.Error,
                    Summary = "No se ha encontrado ningún registro",
                    Detail = "Revise los parámetros utilizados.",
                    Duration = 4000
                };
            notificationService.Notify(mensaje);
        }
        StateHasChanged();
    }

}
